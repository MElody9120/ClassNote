# 人机界面

人机交互的好坏是评价软件性能与质量的一个重要指标

---

## 人机交互应具备的特性

1. 易用性
   - 使用简单
   - 人机界面中所有属于应**标准化**和**具有一致性**
   - 具有帮助功能
   - 快速的系统响应和较低的系统成本
   - 具有容错能力 
2. 灵活性
   - 考虑到用户的特点、能力、知识水平，界面不同
   - 定制和修改界面
   - 提供不同详细程度的系统响应信息
3. 复杂性与可靠性
   1. 界面要具有**一致性**
   2. 常用操作必须要有**快捷方式**
   3. 提供必要的错误处理功能
   4. 提供信息反馈
   5. 允许操作可逆
   6. 允许良好的联机bangzhu合理划分并高效地使用屏幕

---

### 图形用户界面设计的一般原则

针对图形用户界面设计，有以下一些原则
1. 一般交互 （提高可交互性的措施有）
   1. 一致性：人机界面中的菜单选择、命令输入、数据显示以及其他功能都应使用一致的格式
   2. 提供有意义的反馈：向用户提供视觉与听觉的反馈，以保证在用户和界面间能够建立双向联系
   3. 在执行有**较大破坏性**的动作前要求确认
   4. 允许取消大多数已经完成的操作（undo）
   5. 减少在动作间必须记忆的信息数量
   6. 提高对话、移动和思考的效率：精良减少键击次数，缩短鼠标移动的距离，尽量避免用户作“下面怎么办”的思考
   7. 系统应保护自己不受**致命性错误的破坏**
   8. 按照功能对动作分类，并据此安排屏幕布局
   9. 提供语境相关的帮助机制
   10. 命令用简单的动词或动词短语命名
2. 信息显示（信息显示的形式和方式有多种多样，下面是一些带有普遍指导意义的原则）
   1. 只显示与当前语境相关的信息
   2. 使用便于用户迅速吸取信息的方式表现数据，可以用图形取代巨大的表格
   3. 采用一致的标记、标准的缩写和预先定义的颜色
   4. 允许用户保持可视化的语境
   5. 产生有意义的出错信息
   6. 使用大小写、缩进和正文分组来辅助理解
   7. 使用窗口分隔不同类型的信息
   8. 采用“类比”的收发，生动形象地表示信息。
3. 数据输入
   - 用户与系统交互的大部分时间用于键入命令、数据以及提供其它的系统输入。输入手段主要有键盘、鼠标、数字化仪甚至语音识别系统等。处理数据输入的问题时应该注意
      1. 尽量减少用户输入动作的数量
      2. 允许用户定制输入。如专家用户可以决定创建客户命令或省去警告信息和动作确认
      3. 交互应该是灵活的并可调整到用户喜欢的输入方式。

---

## 人机界面的设计方法

设计方法分为四个部分
1. 实验方法
2. 预测模型
   - 两个方法
      1. GOMS模型
         - 用目标、操作、方法和规则选择来描述模型是如何工作的。通过使用的规则集，还可以预测可能出现的错误
      2. 状态转换网络
         - 显示了系统如何从一个状态到另一个状态，可以用于人机界面设计
3. 拟人化方法
   - 两种方法
      1. 收集数据、作为计算系统的设计依据
      2. 人机交互和人人交互比较，研究技术
4. 认知方法
   - 认知方法将认知科学和认知心理学的理论用于人机界面设计
      1. 问题求解
      2. 类比推理
      3. 空间推理
      4. 脚本、计划和目标
      5. 心智模型
      6. 注意资源
认知方法的成功**最终**取决于**从研究到应用转换的成果**

---

### 人机界面设计的认知基础

认知基础的表现形式
1. 视觉刺激在人机界面上的呈现方式
   - 主要有特性刺激、运动刺激、视知觉的组织特性等
2. 视觉搜索的特点对人机界面布局的影响
   - 视觉搜索就是要在很多视觉刺激中搜索出某一个刺激来，被要求搜索的刺激称为“目标刺激”，其他刺激称为“干扰刺激”
   - 视觉搜索有串行搜索与并行搜索两种方式
   - 如果目标刺激和干扰刺激视觉特征上灭有很大的区别，那么一般采用串行方式搜索。反之，则采用并行搜索
3. 短时记忆容量和人机界面设计的关系
   - 处理屏幕信息不仅需要知觉这种低级的认知过程，还需要记忆这样的高级认知过程参与
   - 记忆一般分为**长时记忆**与**短时记忆**
   - 在设计界面时要考虑短时记忆的问题，把相关的信息利用前面介绍的知觉组织原则组织到一起，这样就不会因为在屏幕上导出搜索而浪费时间，并且可以防止因为记忆混淆而导致的操作错误

## 人机界面交互方式

主要有六类界面
1. 问答式对话界面
   - 最简单的人机界面交互方式
2. 菜单交互界面
   - 让用户在一组多个可能对象中进行选择，各种可能的选择项以菜单项的形式显示在屏幕上
3. 填表界面
   - 菜单选择在选取选项方面是有效的，但需要输入一些数据项时，则使用填表界面显得比较自然
4. 命令语言界面
   - 命令语言界面是用户驱动的对话，即由用户发起和控制对话，用户按照命令语言语法输入命令给系统，然后系统解释命令语言，完成命令语言规定的功能，并显示运行结果
5. 查询语言界面
   - 信息查询语言是用户与数据库交互的媒介，是用户定义、检索、修改和控制数据的工具
   - 查询语言是非过程化的准自然语言，用户可以使用类似自然语言的语句方式来定义、查询或更新数据库
   - 数据库用户：程序员用户、技术用户、偶然用户
6. 自然语言界面
   - 自然语言：键盘输入文本、手写文字、语音输入等。计算机能理解用户用自然语言表达的请求，并把系统的理解转换成系统语言，然后执行相应的功能

### 人机界面的用户分析

人机界面的用户分析情况如下图 4-1 所示

![用户分析](../Img/Chapter4-1-用户分析.png)

用户分析是人机界面设计中不可缺少的组成部分，不同研究者对用户有这不同的方法，具体分类方法有以下几种

1. 按用户是否接受过使用计算机系统知识的培训，可以分为未受过训练的用户和受过训练的用户
2. 按使用计算机系统的频率，可以分为偶然用户、经常用户（职业用户）以及间歇式使用计算机的用户
3. 按照使用计算机系统的目的，可以分为最终用户、应用开发用户、系统开发维护用户等

用户还能进一步进行分类
1. 偶然外行型：这类用户很少接触计算机，没有计算机应用的专业知识，缺乏基本的计算机系统知识
2. 初学生疏型：这类用户正在有目的地学习计算机系统，但是，由于时间与经验太少，他们还没有形成对计算机系统的全面认识，但对计算机的性能和操作有着一定程度的了解和经验
3. 熟练型：对系统有相当多的经验，并且是熟练的操作员
4. 专家型：对计算机系统具有全面和系统的专业知识，具有操作、使用计算机系统的知识和经验。他们和计算机之间的交互认知距离很小

用户模型的分层

用户的分层模型如下图 4-2 所示

![用户分层](../Img/Chapter4-2-分层的用户模型.png)

以下为对三种用户分层模型的介绍

1. 常识模型
   1. 对计算机交互界面中的控件的认识和操作程度
      - 控件：指菜单、图标、窗口等
   2. 对交互设备的认识和操作成都
      - 交互设备：键盘、鼠标、光笔、语音话筒、眼动设备、头盔
   3. 对界面风格的认识和操作程度
   4. 对界面功能反馈的认识程度

2. 领域模型
   1. 对应用系统的一般任务的认识
   2. 对应用系统中的专业任务的理解成都
   3. 对应用系统中的专业术语的理解程度

3. 个性模型
   1. 用户对交互风格的偏好
   2. 用户对于系统反馈的喜欢，以及用户对于特殊状况下的处理方式
   3. 用户对于系统交互形式的学习能力的强弱

---

## 人机交互的界面设计

界面设计的四个支柱如下图 4-3 所示

![4个支柱](../Img/Chapter4-3-界面设计的四个支柱.png)

以下进行分点介绍

1. 用户界面需求

软件项目的成败经常取决于所有用户和实现着之间理解的精确性和完整性

在**任何开发**活动中，征求和清楚地指明用户需求是取得成功的一个主要和关键的因素。得出并达成用户界面需求协议的方法因公司和行业而不同，但其最终结果是相同的，即一个清楚的用户群体及用户所执行任务的说明书

2. 指南文档以及过程

在设计过程的前期，用户界面架构师应该产生一套工作指南。苹果公司的Macintosh(麦金塔)机成功的一个要素，就是机器前期的可读性指南文档，它提供了让很多应用开发人员遵循的一组清晰的原则，因而确保了跨产品设计的和谐型。指南文档应考虑如下要素
   1. 词、图标和图形
   2. 术语（对象和动作）、缩写和大写
   3. 字符集、字体、字体大小和风格（粗体、斜体、下划线）
   4. 图标、按钮、图形和线的粗度
   5. 颜色、背景、突出显示和闪烁的使用
   6. 屏幕布局问题
   7. ETC....

指南的建立应该有助于帮助它获得可见性并赢得支持。有争议的指南（例如，何时使用语音警报）应该由同事评议或进行经验性检测。应制定分发至男的规则以确保实施。指南文档应能适应变化的需求，并通过体验而改进。把指南文档分为**严格的标准**、**可接受的做法**和**灵活的指南**这种三级方法，能增加其可接受的程度。这种方法说明哪些项是较稳定的，以及哪些项是易于改变的。

3. 用户界面的软件工具

设计交互系统的困难之一，是客户和用户可能对新系统并没有一个清晰的想法

虽然打印出来的文稿对初步体验是有帮助的，但具有活动键盘和鼠标的屏幕展示却更为真实。原型常常使用简单的会吐或文字处理工具，甚至使用PowerPoint幻灯片来演示开发。

微软的Visual Basic / C++之类的开发环境，不仅易于上手而且具有一组杰出的特性。Visual Studio以及C＃和.NET框架，也能用于评估用户界面开发项目。要确保评估工具的能力、易用性、易学性、成本和性能。按照工作的规模来裁剪自己的工具选择。构建一个支持用户界面开发项自的软件体系结构，与任何其他（特别是大型）软件开发活动同样重要。

4. 专家评审与可用性测试

现在，网站的设计人员认识到，在将系统交付给客户使用之前，必须对组件进行很多小的和一些大的初步试验。除了各种专家评审方法外，与目标用户一起进行的测试、调查和自动化分析工具（黑\白盒测试软件）被证明是有价值的。其过程依可用性研究的目标、预期用户数量、错误的危害程度与投资规模而变化很大

---

## 设计流程

设计的一般流程如下面所示，分点按照顺序介绍

1. 用户的观察和分析
   - 情景访谈（Contextual Interviews）
     - 走进用户的现实环境，尽量了解你的用户的工作方式、生活环境等情况
   - 焦点小组（Focus Groups）
     - 组织一族用户进行讨论，让你更了解用户的理解、想法、态度和需求
   - 单独访谈（Individual Interviews）
     - 一对一的用户讨论，让你了解某个用户是如何工作，使你知道用户的感受、想要什么及其经历等。

2. 设计
   - 常用的素材分析方式是对象模型化，即将用户分析的结果按照讨论的对象进行分类整理，并且以各种图示的方法描述其树形、行为和关系
   - 对象抽象模型可以逐步转化为不同具体程度的用户试图。比较抽象的试图有利于进行逻辑分析，称为低真视图（Low-fidelity Prototype）；比较具体的视图更接近于人机界面的最终表达，称为高真视图（High-fidelity Prototype）

3. 实施
   - 随着产品进入实施阶段，设计师对高真设计原型进行最后的调整，并且撰写产品的设计风格标准（Style Guide），产品各个部分风格的一致性由该标准保证。
   - 产品实施或投入市场后，面向用户的设计并没有结束，而是要进一步的搜集用户的评价和建议，以利于下一代产品的开发和研制

---

任务分析

- 任务分析是交互设计至关重要的缓解，以在用户为中心的设计中，关心的是如何从用户那里理解和获取用户的思维模式，进行充分、直观的表达，并用于交互设计
- 描述用户行为的工具有很多，目前经常提到的是通用标识语言UML(Unified Markup Language)

以用户为中心的界面设计
- Gould、Boies和Lewis与1991年提出了以用户为中心设计的四个重要原则
  - 及早以用户为中心内；设计人员应当在设计过程的早期就致力于了解用户的需要。
  - 综合设计：设计的所有方面应当齐头并进发展，而不是顺次发展，使产品的内部设计与用户界面的需要始终保持一致。
  - 及早并持续地进行测试：当前软件测试的唯一可行的方法是根据经验总结出的方法，即若实际用户认为设计是可行的。通过在开发的全过程引入可用性测试，可以使用户有机会在产品推出之前就设计提供反馈意见
   - 反复式设计：大问题往往会掩盖小问题的存在。设计人员和开发人员应当在整个测试过程中反复对设计进行修改
- 以用户为中心的设计方式有很多种，包括以下几种
  - 图形用户界面设计与评估（Graphical User Interface Design and Evaluation，GUIDE）
  - 以用户为中心的逻辑交互设计（Logical User-Centred Interaction Design，LUCID）
  - 用于交互优化的结构化用户界面设计（Structured User-Interface Design for Interaction Optimisation，STUDIO）
  - 以使用为中心的设计（Usage-Centered Design）
  - OVID设计

对象建模分析
- 对象建模分析是将系统和用户任务分析的结果转化为用户界面设计的第一步；建模是将系统任务的某些概念以及其关系用途的方式直观综合地表达出来；分析则是将系统的对象抽象为类，列出对象或类的属性、行为、以及对象间的关系

例图如下图 4-4 所示

![对象建模](../Img/Chapter4-4-对象建模.png)

视图抽象设计
- 视图抽象设计通过组合概念模型中的对象和对象操作，提供系统运行的方法和方式，为具体的设计提供指导，并要为系统的不同实时方案提供灵活的界面选择
  - 在线机票订购例子中完成上述交互的视图可能包括：用户查询航班视图，航班信息列表视图，用户选中的某个具体航班的信息视图，订购信息填写视图，支付视图，交易成功反馈和出票视图等。

概要设计
- 针对特定的操作系统或交互方式，对抽象的视图设计做进一步的具体设计，产生视图的概要设计。实际设计中，这些视图通常是用铅笔画在纸上，这样做速度快，而且修改起来也比较方便

概要设计例图如下图 4-5 所示

![概要设计](../Img/Chapter4-5-概要设计.png)

视图的关联设计
- 任何一个人机交互系统的界面都可能包括若干状态，用户在不同界面状态下根据自己完成任务需要进行不同的操作；很多交互任务需要从一个状态转化为另一个状态，这就要考虑用户完成任务所需的信息和功能，并将不同交互视图之间的联系和状态转换关系整理清楚

视图的关联设计例图如下图 4-6 所示

![关联设计例图](../Img/Chapter-4-6-视图的关联设计.png)

视图的全面设计
- 确定各个视图的具体内容和大致布局，并在每个视图上明确体现与其他视图的关系，保证系统的整体性和和谐性。
- 浏览器交互方式下，Web界面视图的整体性主要通过下列几点保证：
  - 使用相同的界面风格，包括颜色、字体、布局、行距，间距，导航条等；
  - 使用相同的标识标志，如公司LOGO,底纹团，版权和联系方式等；
  - 系统视图结构清晰，在每个界面上明确标识当前视图与整体系统的关系
  - 使用一致的术语，特别是在不同语言的版本之间保持信息翻译的一致

  ---

  ## Web 界面设计

  WEB 的含义与 WEB应用
- 含义：Web是一个由许多互相链接的超文本(HyperText)文档组成的系统。分布在世界各地的用户能够通过Internet对其访问、进行彼此交流与共享信息。在这个系统中，每个有用的食物，被称为一种“资源”，其由一个全局“同一组员标识符”(URL)标识：这些资源通过超文本传输协议(HyperText Transfer Protocol)传送给用户；而用户通过点击链接来获得这些资源
- WEB应用的成功
   - 所采用的的技术和所能够提供的功能的限制
   还受Web网页的外观的影响
- Web网页的外观经常是醉西安北用户所注意到的。用户对网站的第一印象与界面外观是否友好、吸引人密切相关。所以对于设计人员来说，Web界面设计直观重要。
- Web界面设计的人性化、易用性是Web界面设计的核心

一个标准的网页界面设计如下图 4-7 所示

![标准的网页界面设计]

---

Web界面的设计
- Web设计是艺术与技术的高度统一
- Web设计的要求
   - 主题鲜明
   - 形式与内容相统一
   - 强调整体性

Web设计的特点
- 交互性：即时交互，主动交互
- 持续性：信息的持续更新
- 多维性：源于超链接，导航清晰
- 多媒体：综合运用多种媒体元素
- 布局不可控
   - 根据操作系统的不同、浏览器种类和版本不同、屏幕大小和分辨率不同

Web设计的基本原则
- 主题鲜明
- 形式与内容的统一
- 强调整体
- 减少层次

Web设计的内容原则
- 主流浏览器**正常显示**
- 结构层次分明
- 平衡使用多种媒体，达到效率与效果的统一
- 文字通俗易懂
- 重视主页
- 及时更新

Web设计的风格原则
- 用户
   - 儿童
   - 老年人
- 功能
   - 专业
   - 娱乐时尚

Web设计的语言文化原则
- 文字排向
- 颜色
- 数字
-时尚格式
- 货币

Web界面元素的设计
- 布局
- 导航
= 颜色
- 文字
- 视听元素
   - RIA
